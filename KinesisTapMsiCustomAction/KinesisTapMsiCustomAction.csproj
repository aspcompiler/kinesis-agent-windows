<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" InitialTargets="EnsureWixToolsetInstalled" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E9B048B2-B6C9-4C75-A0DA-BDFC414C2A06}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>KinesisTapMsiCustomAction</RootNamespace>
    <AssemblyName>KinesisTapMsiCustomAction</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.ServiceProcess" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.Deployment.WindowsInstaller">
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CustomAction.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Content Include="CustomAction.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(WixCATargetsPath)" Condition=" '$(WixCATargetsPath)' != '' " />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.CA.targets" Condition=" '$(WixCATargetsPath)' == '' AND Exists('$(MSBuildExtensionsPath32)\Microsoft\WiX\v3.x\Wix.CA.targets') " />
  <Target Name="EnsureWixToolsetInstalled" Condition=" '$(WixCATargetsImported)' != 'true' ">
    <Error Text="The WiX Toolset v3.11 (or newer) build tools must be installed to build this project. To download the WiX Toolset, see http://wixtoolset.org/releases/" />
  </Target>
  <ItemGroup>
    <MainArtifacts Include="$(SolutionDir)Amazon.KinesisTap\bin\$(Configuration)\*.dll;
                            $(SolutionDir)Amazon.KinesisTap\bin\$(Configuration)\*.pdb;
                            $(SolutionDir)Amazon.KinesisTap\appsettingsTemplate.json;
                            $(SolutionDir)Amazon.KinesisTap\appsettingsSchema.json;"/>
    <MainArtifactsAmd64 Include="$(SolutionDir)Amazon.KinesisTap\bin\$(Configuration)\amd64\*.dll;"/>
    <MainArtifactsX86 Include="$(SolutionDir)Amazon.KinesisTap\bin\$(Configuration)\x86\*.dll;"/>
    <DiagnosticTool Include="$(SolutionDir)Amazon.KinesisTap.DiagnosticTool\bin\$(Configuration)\*.exe;
                             $(SolutionDir)Amazon.KinesisTap.DiagnosticTool\bin\$(Configuration)\*.exe.config;
                             $(SolutionDir)Amazon.KinesisTap.DiagnosticTool\bin\$(Configuration)\log4net.dll;
                             $(SolutionDir)Amazon.KinesisTap.DiagnosticTool\bin\$(Configuration)\Newtonsoft.Json.Schema.dll;
                             $(SolutionDir)Amazon.KinesisTap.DiagnosticTool\bin\$(Configuration)\System.Console.dll;
                             $(SolutionDir)Amazon.KinesisTap.DiagnosticTool\bin\$(Configuration)\Amazon.KinesisTap.DiagnosticTool.Core.???"/>
    <Uls Include="$(SolutionDir)Amazon.KinesisTap.Uls\bin\$(Configuration)\netstandard1.3\Amazon.KinesisTap.Uls.???"/>
    <AutoUpdate Include="$(SolutionDir)Amazon.KinesisTap.AutoUpdate\bin\$(Configuration)\netstandard1.3\Amazon.KinesisTap.AutoUpdate.???"/>
    <Wincredible Include="$(SolutionDir)Amazon.KinesisTap.CredentialProvider.Wincredible\bin\$(Configuration)\Amazon.KinesisTap.CredentialProvider.Wincredible.???;
                          $(SolutionDir)Amazon.KinesisTap.CredentialProvider.Wincredible\bin\$(Configuration)\Wincredible.*.???"/>
    <DungeonMaster Include="$(SolutionDir)Amazon.KinesisTap.DungeonMaster\bin\$(Configuration)\netstandard1.3\Amazon.KinesisTap.DungeonMaster.???"/>
    <SharedProj Include="$(SolutionDir)Amazon.KinesisTap.Shared\bin\$(Configuration)\net46\Amazon.KinesisTap.Shared.???"/>
    <SecurityPlugins Include="$(SolutionDir)Amazon.KinesisTap.Windows.SecurityPlugins\bin\$(Configuration)\Amazon.KinesisTap.Windows.SecurityPlugins.???"/>
    <AutorunsWorker Include="$(SolutionDir)Amazon.KinesisTap.AutorunsWorker\bin\$(Configuration)\AutorunsWorker.*"/>
    <AutorunsX64 Include="$(SolutionDir)Library\autoruns*64.*"/>
  </ItemGroup>
  <Target Name="BeforeBuild">
    <RemoveDir Directories="$(SolutionDir)msibuild" />
    <Copy
      SourceFiles="@(MainArtifacts)"
      DestinationFolder="$(SolutionDir)msibuild"/>
    <Copy
      SourceFiles="@(MainArtifactsAmd64)"
      DestinationFolder="$(SolutionDir)msibuild\amd64"/>
    <Copy
      SourceFiles="@(MainArtifactsX86)"
      DestinationFolder="$(SolutionDir)msibuild\x86"/>
    <Copy
      SourceFiles="$(SolutionDir)Amazon.KinesisTap\bin\$(Configuration)\NLog.xml"
      DestinationFiles="$(SolutionDir)msibuild\NLogTemplate.xml"/>
    <Copy
      SourceFiles="$(SolutionDir)Amazon.KinesisTap\bin\$(Configuration)\AWSKinesisTap.exe.config"
      DestinationFiles="$(SolutionDir)msibuild\AWSKinesisTap.exe.config.new"/>

    <Copy
      SourceFiles="@(DiagnosticTool)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(Uls)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(AutoUpdate)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(Wincredible)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(DungeonMaster)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(SharedProj)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(SecurityPlugins)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(AutorunsWorker)"
      DestinationFolder="$(SolutionDir)msibuild"/>

    <Copy
      SourceFiles="@(AutorunsX64)"
      DestinationFolder="$(SolutionDir)msibuild\amd64"/>

    <Move Condition="Exists('$(SolutionDir)signed_artifacts')"
      SourceFiles="$(SolutionDir)signed_artifacts\KinesisTap.exe" DestinationFolder="$(SolutionDir)Amazon.KinesisTap\bin\$(Configuration)"/>

    <Exec Condition="Exists('$(SolutionDir)signed_artifacts')"
      Command='xcopy "$(SolutionDir)signed_artifacts\%2a" "$(SolutionDir)\msibuild" /y /i'/>

    <Exec
      Command='"C:\Program Files (x86)\WiX Toolset v3.11\bin\heat.exe" dir "$(SolutionDir)msibuild" -dr INSTALLFOLDER -cg KinesisTapComponents -gg -g1 -scom -sreg -sfrag -srd -var var.SourcePath -platform  -out "$(SolutionDir)KinesisTapWixSetup\Amazon.KinesisTap.wxs"'/>
	</Target> 
</Project>
